version: "3.4"
services:
  mealie:
    container_name: mealie
    image: mealie:dev
    build:
      context: ../
      target: production
      dockerfile: ./docker/Dockerfile
    restart: always
    volumes:
      - mealie-data:/app/data/
    ports:
      - 9091:9000
    environment:
      ALLOW_SIGNUP: "false"
      BASE_URL: https://recipes.example.com

      DB_ENGINE: sqlite # Optional: 'sqlite', 'postgres'
      # =====================================
      # Postgres Config
      POSTGRES_USER: mealie
      POSTGRES_PASSWORD: mealie
      POSTGRES_SERVER: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: mealie

      # =====================================
      # Web Concurrency
      WEB_GUNICORN: "false"
      WORKERS_PER_CORE: 0.5
      MAX_WORKERS: 1
      WEB_CONCURRENCY: 1
      # =====================================
      # Email Configuration
      # SMTP_HOST=
      # SMTP_PORT=587
      # SMTP_FROM_NAME=Mealie
      # SMTP_AUTH_STRATEGY=TLS # Options: 'TLS', 'SSL', 'NONE'
      # SMTP_FROM_EMAIL=
      # SMTP_USER=
      # SMTP_PASSWORD=
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mealie.rule=Host(`recipes.example.com`)"
      - "traefik.http.routers.mealie.entrypoints=websecure,web"

  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8081"
      - "--entrypoints.websecure.address=:443"
      - "--serversTransport.insecureSkipVerify=true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    ports:
      - "8081:8081"
      - "443:443"
      - "8082:8080"

volumes:
  mealie-data:
    driver: local
